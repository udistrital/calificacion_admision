swagger: "2.0"
info:
  title: beego Test API
  description: |
    beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /cupos_por_dependencia/:
    get:
      tags:
      - cupos_por_dependencia
      description: |-
        get CuposPorDependencia
        <br>
      operationId: CuposPorDependenciaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CuposPorDependencia'
        "404":
          description: not found resource
    post:
      tags:
      - cupos_por_dependencia
      description: |-
        create CuposPorDependencia
        <br>
      operationId: CuposPorDependenciaController.Post
      parameters:
      - in: body
        name: body
        description: body for CuposPorDependencia content
        required: true
        schema:
          $ref: '#/definitions/models.CuposPorDependencia'
      responses:
        "201":
          description: '{int} models.CuposPorDependencia'
        "400":
          description: the request contains incorrect syntax
  /cupos_por_dependencia/{id}:
    get:
      tags:
      - cupos_por_dependencia
      description: |-
        get CuposPorDependencia by id
        <br>
      operationId: CuposPorDependenciaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CuposPorDependencia'
        "404":
          description: not found resource
    put:
      tags:
      - cupos_por_dependencia
      description: |-
        update the CuposPorDependencia
        <br>
      operationId: CuposPorDependenciaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CuposPorDependencia content
        required: true
        schema:
          $ref: '#/definitions/models.CuposPorDependencia'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CuposPorDependencia'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - cupos_por_dependencia
      description: |-
        delete the CuposPorDependencia
        <br>
      operationId: CuposPorDependenciaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /detalle_evaluacion/:
    get:
      tags:
      - detalle_evaluacion
      description: |-
        get DetalleEvaluacion
        <br>
      operationId: DetalleEvaluacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetalleEvaluacion'
        "403":
          description: ""
    post:
      tags:
      - detalle_evaluacion
      description: |-
        create DetalleEvaluacion
        <br>
      operationId: DetalleEvaluacionController.Post
      parameters:
      - in: body
        name: body
        description: body for DetalleEvaluacion content
        required: true
        schema:
          $ref: '#/definitions/models.DetalleEvaluacion'
      responses:
        "201":
          description: '{int} models.DetalleEvaluacion'
        "403":
          description: body is empty
  /detalle_evaluacion/{id}:
    get:
      tags:
      - detalle_evaluacion
      description: |-
        get DetalleEvaluacion by id
        <br>
      operationId: DetalleEvaluacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetalleEvaluacion'
        "403":
          description: :id is empty
    put:
      tags:
      - detalle_evaluacion
      description: |-
        update the DetalleEvaluacion
        <br>
      operationId: DetalleEvaluacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DetalleEvaluacion content
        required: true
        schema:
          $ref: '#/definitions/models.DetalleEvaluacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetalleEvaluacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - detalle_evaluacion
      description: |-
        delete the DetalleEvaluacion
        <br>
      operationId: DetalleEvaluacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /entrevista/:
    get:
      tags:
      - entrevista
      description: |-
        get Entrevista
        <br>
      operationId: EntrevistaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrevista'
        "404":
          description: not found resource
    post:
      tags:
      - entrevista
      description: |-
        create Entrevista
        <br>
      operationId: EntrevistaController.Post
      parameters:
      - in: body
        name: body
        description: body for Entrevista content
        required: true
        schema:
          $ref: '#/definitions/models.Entrevista'
      responses:
        "201":
          description: '{int} models.Entrevista'
        "400":
          description: the request contains incorrect syntax
  /entrevista/{id}:
    get:
      tags:
      - entrevista
      description: |-
        get Entrevista by id
        <br>
      operationId: EntrevistaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrevista'
        "404":
          description: not found resource
    put:
      tags:
      - entrevista
      description: |-
        update the Entrevista
        <br>
      operationId: EntrevistaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Entrevista content
        required: true
        schema:
          $ref: '#/definitions/models.Entrevista'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrevista'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - entrevista
      description: |-
        delete the Entrevista
        <br>
      operationId: EntrevistaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /entrevistador/:
    get:
      tags:
      - entrevistador
      description: |-
        get Entrevistador
        <br>
      operationId: EntrevistadorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrevistador'
        "404":
          description: not found resource
    post:
      tags:
      - entrevistador
      description: |-
        create Entrevistador
        <br>
      operationId: EntrevistadorController.Post
      parameters:
      - in: body
        name: body
        description: body for Entrevistador content
        required: true
        schema:
          $ref: '#/definitions/models.Entrevistador'
      responses:
        "201":
          description: '{int} models.Entrevistador'
        "400":
          description: the request contains incorrect syntax
  /entrevistador/{id}:
    get:
      tags:
      - entrevistador
      description: |-
        get Entrevistador by id
        <br>
      operationId: EntrevistadorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrevistador'
        "404":
          description: not found resource
    put:
      tags:
      - entrevistador
      description: |-
        update the Entrevistador
        <br>
      operationId: EntrevistadorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Entrevistador content
        required: true
        schema:
          $ref: '#/definitions/models.Entrevistador'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrevistador'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - entrevistador
      description: |-
        delete the Entrevistador
        <br>
      operationId: EntrevistadorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /entrevistador_entrevista/:
    get:
      tags:
      - entrevistador_entrevista
      description: |-
        get EntrevistadorEntrevista
        <br>
      operationId: EntrevistadorEntrevistaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EntrevistadorEntrevista'
        "404":
          description: not found resource
    post:
      tags:
      - entrevistador_entrevista
      description: |-
        create EntrevistadorEntrevista
        <br>
      operationId: EntrevistadorEntrevistaController.Post
      parameters:
      - in: body
        name: body
        description: body for EntrevistadorEntrevista content
        required: true
        schema:
          $ref: '#/definitions/models.EntrevistadorEntrevista'
      responses:
        "201":
          description: '{int} models.EntrevistadorEntrevista'
        "400":
          description: the request contains incorrect syntax
  /entrevistador_entrevista/{id}:
    get:
      tags:
      - entrevistador_entrevista
      description: |-
        get EntrevistadorEntrevista by id
        <br>
      operationId: EntrevistadorEntrevistaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EntrevistadorEntrevista'
        "404":
          description: not found resource
    put:
      tags:
      - entrevistador_entrevista
      description: |-
        update the EntrevistadorEntrevista
        <br>
      operationId: EntrevistadorEntrevistaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EntrevistadorEntrevista content
        required: true
        schema:
          $ref: '#/definitions/models.EntrevistadorEntrevista'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EntrevistadorEntrevista'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - entrevistador_entrevista
      description: |-
        delete the EntrevistadorEntrevista
        <br>
      operationId: EntrevistadorEntrevistaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_entrevista/:
    get:
      tags:
      - estado_entrevista
      description: |-
        get EstadoEntrevista
        <br>
      operationId: EstadoEntrevistaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoEntrevista'
        "404":
          description: not found resource
    post:
      tags:
      - estado_entrevista
      description: |-
        create EstadoEntrevista
        <br>
      operationId: EstadoEntrevistaController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoEntrevista content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEntrevista'
      responses:
        "201":
          description: '{int} models.EstadoEntrevista'
        "400":
          description: the request contains incorrect syntax
  /estado_entrevista/{id}:
    get:
      tags:
      - estado_entrevista
      description: |-
        get EstadoEntrevista by id
        <br>
      operationId: EstadoEntrevistaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoEntrevista'
        "404":
          description: not found resource
    put:
      tags:
      - estado_entrevista
      description: |-
        update the EstadoEntrevista
        <br>
      operationId: EstadoEntrevistaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoEntrevista content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEntrevista'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoEntrevista'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_entrevista
      description: |-
        delete the EstadoEntrevista
        <br>
      operationId: EstadoEntrevistaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /requisito/:
    get:
      tags:
      - requisito
      description: |-
        get Requisito
        <br>
      operationId: RequisitoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Requisito'
        "404":
          description: not found resource
    post:
      tags:
      - requisito
      description: |-
        create Requisito
        <br>
      operationId: RequisitoController.Post
      parameters:
      - in: body
        name: body
        description: body for Requisito content
        required: true
        schema:
          $ref: '#/definitions/models.Requisito'
      responses:
        "201":
          description: '{int} models.Requisito'
        "400":
          description: the request contains incorrect syntax
  /requisito/{id}:
    get:
      tags:
      - requisito
      description: |-
        get Requisito by id
        <br>
      operationId: RequisitoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Requisito'
        "404":
          description: not found resource
    put:
      tags:
      - requisito
      description: |-
        update the Requisito
        <br>
      operationId: RequisitoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Requisito content
        required: true
        schema:
          $ref: '#/definitions/models.Requisito'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Requisito'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - requisito
      description: |-
        delete the Requisito
        <br>
      operationId: RequisitoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /requisito_programa_academico/:
    get:
      tags:
      - requisito_programa_academico
      description: |-
        get RequisitoProgramaAcademico
        <br>
      operationId: RequisitoProgramaAcademicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RequisitoProgramaAcademico'
        "404":
          description: not found resource
    post:
      tags:
      - requisito_programa_academico
      description: |-
        create RequisitoProgramaAcademico
        <br>
      operationId: RequisitoProgramaAcademicoController.Post
      parameters:
      - in: body
        name: body
        description: body for RequisitoProgramaAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.RequisitoProgramaAcademico'
      responses:
        "201":
          description: '{int} models.RequisitoProgramaAcademico'
        "400":
          description: the request contains incorrect syntax
  /requisito_programa_academico/{id}:
    get:
      tags:
      - requisito_programa_academico
      description: |-
        get RequisitoProgramaAcademico by id
        <br>
      operationId: RequisitoProgramaAcademicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RequisitoProgramaAcademico'
        "404":
          description: not found resource
    put:
      tags:
      - requisito_programa_academico
      description: |-
        update the RequisitoProgramaAcademico
        <br>
      operationId: RequisitoProgramaAcademicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RequisitoProgramaAcademico content
        required: true
        schema:
          $ref: '#/definitions/models.RequisitoProgramaAcademico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RequisitoProgramaAcademico'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - requisito_programa_academico
      description: |-
        delete the RequisitoProgramaAcademico
        <br>
      operationId: RequisitoProgramaAcademicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tags_por_dependencia/:
    get:
      tags:
      - tags_por_dependencia
      description: |-
        get TagsPorDependencia
        <br>
      operationId: TagsPorDependenciaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TagsPorDependencia'
        "404":
          description: not found resource
    post:
      tags:
      - tags_por_dependencia
      description: |-
        create TagsPorDependencia
        <br>
      operationId: TagsPorDependenciaController.Post
      parameters:
      - in: body
        name: body
        description: body for TagsPorDependencia content
        required: true
        schema:
          $ref: '#/definitions/models.TagsPorDependencia'
      responses:
        "201":
          description: '{int} models.TagsPorDependencia'
        "400":
          description: the request contains incorrect syntax
  /tags_por_dependencia/{id}:
    get:
      tags:
      - tags_por_dependencia
      description: |-
        get TagsPorDependencia by id
        <br>
      operationId: TagsPorDependenciaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TagsPorDependencia'
        "404":
          description: not found resource
    put:
      tags:
      - tags_por_dependencia
      description: |-
        update the TagsPorDependencia
        <br>
      operationId: TagsPorDependenciaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TagsPorDependencia content
        required: true
        schema:
          $ref: '#/definitions/models.TagsPorDependencia'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TagsPorDependencia'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tags_por_dependencia
      description: |-
        delete the TagsPorDependencia
        <br>
      operationId: TagsPorDependenciaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_entrevista/:
    get:
      tags:
      - tipo_entrevista
      description: |-
        get TipoEntrevista
        <br>
      operationId: TipoEntrevistaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEntrevista'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_entrevista
      description: |-
        create TipoEntrevista
        <br>
      operationId: TipoEntrevistaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoEntrevista content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEntrevista'
      responses:
        "201":
          description: '{int} models.TipoEntrevista'
        "400":
          description: the request contains incorrect syntax
  /tipo_entrevista/{id}:
    get:
      tags:
      - tipo_entrevista
      description: |-
        get TipoEntrevista by id
        <br>
      operationId: TipoEntrevistaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEntrevista'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_entrevista
      description: |-
        update the TipoEntrevista
        <br>
      operationId: TipoEntrevistaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoEntrevista content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEntrevista'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEntrevista'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_entrevista
      description: |-
        delete the TipoEntrevista
        <br>
      operationId: TipoEntrevistaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
definitions:
  models.CuposPorDependencia:
    title: CuposPorDependencia
    type: object
    properties:
      Activo:
        type: boolean
      CuposEspeciales:
        type: string
      CuposHabilitados:
        type: integer
        format: int64
      CuposOpcionados:
        type: integer
        format: int64
      DependenciaId:
        type: integer
        format: int64
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      PeriodoId:
        type: integer
        format: int64
  models.DetalleEvaluacion:
    title: DetalleEvaluacion
    type: object
    properties:
      Activo:
        type: boolean
      DetalleCalificacion:
        type: string
      EntrevistaId:
        $ref: '#/definitions/models.Entrevista'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      InscripcionId:
        type: integer
        format: int64
      NotaRequisito:
        type: number
        format: double
      RequisitoProgramaAcademicoId:
        $ref: '#/definitions/models.RequisitoProgramaAcademico'
  models.Entrevista:
    title: Entrevista
    type: object
    properties:
      Activo:
        type: boolean
      EstadoEntrevistaId:
        $ref: '#/definitions/models.EstadoEntrevista'
      FechaCreacion:
        type: string
      FechaEntrevista:
        type: string
        format: datetime
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      InscripcionId:
        type: integer
        format: int64
      TipoEntrevistaId:
        $ref: '#/definitions/models.TipoEntrevista'
  models.Entrevistador:
    title: Entrevistador
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      PersonaId:
        type: integer
        format: int64
      ProgramaAcademicoId:
        type: integer
        format: int64
  models.EntrevistadorEntrevista:
    title: EntrevistadorEntrevista
    type: object
    properties:
      Activo:
        type: boolean
      EntrevistaId:
        $ref: '#/definitions/models.Entrevista'
      EntrevistadorId:
        $ref: '#/definitions/models.Entrevistador'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      NotaParcial:
        type: number
        format: double
  models.EstadoEntrevista:
    title: EstadoEntrevista
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.Requisito:
    title: Requisito
    type: object
    properties:
      Activo:
        type: boolean
      Asistencia:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      ExamenEstado:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
      RequisitoPadreId:
        $ref: '#/definitions/models.Requisito'
  models.RequisitoProgramaAcademico:
    title: RequisitoProgramaAcademico
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Opcion:
        type: string
      PeriodoId:
        type: integer
        format: int64
      PorcentajeEspecifico:
        type: string
      PorcentajeGeneral:
        type: number
        format: double
      ProgramaAcademicoId:
        type: integer
        format: int64
      PuntajeMinimoExamenEstado:
        type: integer
        format: int64
      RequisitoId:
        $ref: '#/definitions/models.Requisito'
  models.TagsPorDependencia:
    title: TagsPorDependencia
    type: object
    properties:
      Activo:
        type: boolean
      DependenciaId:
        type: integer
        format: int64
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      ListaTags:
        type: string
      PeriodoId:
        type: integer
        format: int64
      TipoInscripcionId:
        type: integer
        format: int64
  models.TipoEntrevista:
    title: TipoEntrevista
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
tags:
- name: estado_entrevista
  description: |
    EstadoEntrevistaController operations for EstadoEntrevista
- name: requisito
  description: |
    RequisitoController operations for Requisito
- name: tipo_entrevista
  description: |
    TipoEntrevistaController operations for TipoEntrevista
- name: entrevistador_entrevista
  description: |
    EntrevistadorEntrevistaController operations for EntrevistadorEntrevista
- name: entrevistador
  description: |
    EntrevistadorController operations for Entrevistador
- name: requisito_programa_academico
  description: |
    RequisitoProgramaAcademicoController operations for RequisitoProgramaAcademico
- name: cupos_por_dependencia
  description: |
    CuposPorDependenciaController operations for CuposPorDependencia
- name: entrevista
  description: |
    EntrevistaController operations for Entrevista
- name: tr_archivo_icfes
  description: |
    operations for TrArchivoIcfesController
- name: detalle_evaluacion
  description: |
    DetalleEvaluacionController operations for DetalleEvaluacion
- name: tags_por_dependencia
  description: |
    TagsPorDependenciaController operations for TagsPorDependencia
